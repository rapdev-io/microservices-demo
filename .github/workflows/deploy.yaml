name: Deploy Otel-demo
 
on: 
  push:
    branches: [sco]
    # paths: [swagstore/**]
    paths-ignore: [src/**]

env:
  commits: '[{"commitId": "${{ github.sha }}" }]'
  repository: "${{ github.repository }}"
  run_number: "${{ github.run_number }}"
  job: ${{ github.job }}
  REPO_NAME: "${{ github.event.repository.name }}"
  GCP_PROJECT: microservices-demo-401016
  GCP_SERVICE_ACCOUNT: microservices-demo-svc@microservices-demo-401016.iam.gserviceaccount.com
  GCP_WORKLOAD_IDENTITY_PROVIDER: "projects/241697928795/locations/global/workloadIdentityPools/microservices-demo-pool/providers/microservices-demo-provider"

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  deployment:
    runs-on: ubuntu-latest
    name: Prod Deploy
    environment: Production
    steps:
     - name: ServiceNow Change
       uses: ServiceNow/servicenow-devops-change@v2.0.0
       with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Prod Deploy'
          change-request: '{"setCloseCode":"true","attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","cmdb_ci":"d1c811ca1b757910de9785507e4bcbfe","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '5'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
     - run: echo completing
      
     - uses: actions/checkout@v3    
     - uses: actions/checkout@v3
       with:
          ref: "${{ github.event.pull_request.head.ref }}"
      
     - name: Google Cloud Platform Authentication
       id: auth
       uses: google-github-actions/auth@v1
       with:
          create_credentials_file: "true"
          workload_identity_provider: "${{ env.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ env.GCP_SERVICE_ACCOUNT }}"

     - name: Docker auth
       run: gcloud auth configure-docker --quiet

     - uses: simenandre/setup-gke-gcloud-auth-plugin@v1
      
     - uses: google-github-actions/get-gke-credentials@v1
       with:
          cluster_name: microservices-demo
          location: us-central1-a
      
     - name: Get Creds
       run: gcloud container clusters get-credentials --zone=us-central1-a microservices-demo

    # - name: Install Skaffold
     #  run: curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && sudo install skaffold /usr/local/bin/

     - name: Deploy
       run: kubectl config set-context --current --namespace=otel-demo && make build-and-push-ghcr && cd kubernetes && kubectl apply -f opentelemetry-demo.yaml -n otel-demo
